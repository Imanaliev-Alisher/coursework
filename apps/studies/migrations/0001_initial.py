# Generated by Django 5.2 on 2025-05-16 19:06

import apps.studies.enums
import django.db.models.deletion
import enumfields.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('buildings', '0001_initial'),
        ('groups', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_day', enumfields.fields.EnumField(enum=apps.studies.enums.WeekDays, help_text='Выберите день недели', max_length=31, verbose_name='День недели')),
                ('time', models.TimeField(help_text='Выберите время', verbose_name='Время')),
                ('week_type', enumfields.fields.EnumField(enum=apps.studies.enums.EvenOddBoth, help_text='Выберите тип недели', max_length=31, verbose_name='Тип недели')),
            ],
            options={
                'verbose_name': 'Расписание',
                'verbose_name_plural': 'Расписании',
            },
        ),
        migrations.CreateModel(
            name='SubjectsTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Введите наименование типа', max_length=127, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип предмета',
                'verbose_name_plural': 'Типы предметов',
            },
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groups', models.ForeignKey(help_text='Выберите в какой учебной группе должен числиться этот студент.', on_delete=django.db.models.deletion.PROTECT, related_name='students', to='groups.studygroups', verbose_name='Учебная группа')),
                ('user', models.OneToOneField(help_text='Выберите пользователя который должен быть студентом', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
            },
        ),
        migrations.CreateModel(
            name='Teachers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(blank=True, help_text='Введите должность преподавателя', max_length=63, verbose_name='Должность')),
                ('user', models.OneToOneField(help_text='Выберите пользователя который должен быть преподавателем', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Преподаватель',
                'verbose_name_plural': 'Преподаватели',
            },
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Введите назвние предмета', max_length=255, verbose_name='Название предмета')),
                ('audience', models.ForeignKey(help_text='Выберите аудиторию', on_delete=django.db.models.deletion.PROTECT, related_name='subjects', to='buildings.audiences', verbose_name='Аудитория')),
                ('groups', models.ManyToManyField(help_text='Выберите учебные группы', to='groups.studygroups', verbose_name='Учебная группа')),
                ('schedule', models.ManyToManyField(help_text='Выберите подходящие расписание', to='studies.schedule', verbose_name='Расписание')),
                ('subject_type', models.ForeignKey(help_text='Выберите тип предмета', on_delete=django.db.models.deletion.PROTECT, related_name='subjects', to='studies.subjectstypes', verbose_name='Тип предмета')),
                ('teachers', models.ManyToManyField(help_text='Выберите преподавателей предмета', to='studies.teachers', verbose_name='Преподователи')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
            },
        ),
    ]
